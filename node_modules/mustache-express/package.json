{
  "name": "mustache-express",
  "description": "Use mustache, including partials, in Express 3",
  "author": {
    "name": "Bryan Burgers",
    "email": "bryan@burgers.io",
    "url": "http://www.burgers.io"
  },
  "version": "1.2.0",
  "repository": {
    "type": "git",
    "url": "http://github.com/bryanburgers/node-mustache-express.git"
  },
  "main": "mustache-express.js",
  "contributors": [
    {
      "name": "Andrea Mirone",
      "email": "andreamirone@gmail.com"
    },
    {
      "name": "Pasi Rajala",
      "email": "p@prr.fi"
    },
    {
      "name": "Moandji Ezana",
      "email": "mwanji@gmail.com"
    },
    {
      "name": "Mikko Tikkanen",
      "email": "mikko.tikkanen@gmail.com"
    }
  ],
  "dependencies": {
    "async": "~0.2.10",
    "lru-cache": "~2.5.0",
    "mustache": "~0.8.1"
  },
  "devDependencies": {
    "grunt": "~0.4",
    "grunt-contrib-jshint": "~0.8",
    "jshint": "~2.4",
    "mocha": "~1.7",
    "should": "~1.2"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "mocha && jshint"
  },
  "readme": "# The Mustache Express\n\n[![Build Status](https://travis-ci.org/bryanburgers/node-mustache-express.png)](https://travis-ci.org/bryanburgers/node-mustache-express)\n\nMustache Express lets you use Mustache and Express (at least version 3) together, including auto-loading partials.\n\n## Usage\n\n    var mustacheExpress = require('mustache-express');\n\n    // Register '.mustache' extension with The Mustache Express\n    app.engine('mustache', mustacheExpress());\n\n    app.set('view engine', 'mustache');\n    app.set('views', __dirname + '/views');\n\n## Parameters\n\nThe mustacheExpress method can take two parameters: the directory of the partials and the extension of the partials. When a partial is requested by a template, the file will be loaded from `path.resolve(directory, partialName + extension)`. By default, these values are determined by Express.\n\n## Properties\n\nThe return function has a `cache` parameter that is an [LRU Cache](https://github.com/isaacs/node-lru-cache).\n\n    var engine = mustacheExpress();\n    var cache = engine.cache; // Caches the full file name with some internal data.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/bryanburgers/node-mustache-express/issues"
  },
  "_id": "mustache-express@1.2.0",
  "dist": {
    "shasum": "d08e2b9951bffa6b505c3b0f5ebf97e1c7f4404d"
  },
  "_from": "mustache-express@",
  "_resolved": "https://registry.npmjs.org/mustache-express/-/mustache-express-1.2.0.tgz"
}
